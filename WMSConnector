package WMS;

import java.awt.List;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.imageio.ImageIO;

import org.geotools.data.ows.WMSCapabilities;
import org.geotools.data.wms.WebMapServer;
import org.geotools.data.wms.request.GetMapRequest;
import org.geotools.data.wms.response.GetMapResponse;
import org.geotools.map.Layer;
import org.geotools.ows.ServiceException;
import org.xml.sax.SAXException;

public class WMSConn {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
		URL url = null;
		try {
		  //url = new URL("http://giswebservices.massgis.state.ma.us/geoserver/wms");
			url = new URL("http://129.206.228.72/cached/osm");

		  
		} catch (MalformedURLException e) {
		  //will not happen
		}

		WebMapServer wms = null;
		try {
		  wms = new WebMapServer(url);


		  WMSCapabilities capabilities = wms.getCapabilities();


		
		  GetMapRequest request = wms.createGetMapRequest();
			
			request.setFormat("image/png");
			request.setDimensions("583", "420"); //sets the dimensions of the image to be returned from the server
			request.setTransparent(true);
			request.setSRS("EPSG:4326");
			request.setBBox("-131.13151509433965,46.60532747661736,-117.61620566037737,56.34191403281659");
			//Note: you can look at the layer metadata to determine a layer's bounding box for a SRS
			
			GetMapResponse response = (GetMapResponse) wms.issueRequest(request);
			BufferedImage image = ImageIO.read(new File("Weltkarte"));
		} catch (IOException e) {
			  //There was an error communicating with the server
			  //For example, the server is down
			} catch (ServiceException e) {
			  //The server returned a ServiceException (unusual in this case)
			} catch (SAXException e) {
			  //Unable to parse the response from the server
			  //For example, the capabilities it returned was not valid
			}
		  
		
		
	}

}
